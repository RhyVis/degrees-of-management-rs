name: Build and Release

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux and Windows Cross Compilers
        run: sudo apt-get install --yes --no-install-recommends musl-tools gcc-mingw-w64-x86-64-win32

      - name: Install rustup targets
        run: rustup target add x86_64-unknown-linux-musl x86_64-pc-windows-gnu

      - name: Build
        run: |
          cd server
          cargo build --release --target x86_64-unknown-linux-musl --target x86_64-pc-windows-gnu

          tar -czvf degrees_of_management-linux.tar.gz -C target/x86_64-unknown-linux-musl/release server
          zip -j degrees_of_management-windows.zip target/x86_64-pc-windows-gnu/release/server.exe

          shasum -a 256 degrees_of_management-linux.tar.gz > degrees_of_management-linux.tar.gz.sha256
          shasum -a 256 degrees_of_management-windows.zip > degrees_of_management-windows.zip.sha256

      - name: Get version
        id: get_version
        run: |    
          cd server
          VERSION=$(grep -m 1 'version = "' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/degrees-of-management:latest
            ghcr.io/${{ github.repository_owner }}/degrees-of-management:${{ env.VERSION }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ env.RELEASE_DATE }}
            org.opencontainers.image.version=${{ env.VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }} (${{ env.RELEASE_DATE }})
          draft: false
          prerelease: false
          make_latest: true
          generate_release_notes: true
          files: |
            server/*.zip
            server/*.gz
            server/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
